import { CloseButton } from 'app/components/buttons/close-button';
import type React from 'react';
import { Suspense } from 'react';
import ReactModal, { type Props as ReactModalProps } from 'react-modal';

type ModalProps = ReactModalProps & {
  closeHandler: () => void;
  title?: string;
  hasTitle?: boolean;
};

export const Modal: React.FC<ModalProps> = (props) => {
  const { isOpen = false, closeHandler, hasTitle, title, children, ...rest } = props;

  return (
    <ReactModal
      {...rest}
      isOpen={isOpen}
      overlayClassName="flex justify-center items-center fixed left-0 top-0 z-20 h-screen w-screen backdrop-brightness-50 transition-opacity duration-300"
      className="m-4 w-full max-w-[600px] rounded-md bg-white p-4 md:m-0 md:min-w-[600px]"
      shouldCloseOnOverlayClick
      onRequestClose={closeHandler}
      appElement={document.getElementById('root') as HTMLElement}
    >
      <div className="relative size-full">
        {/* Modal header */}
        {hasTitle && (
          <div className="mb-2 border-b border-gray-300">
            {/* Modal title */}
            <div className="flex max-w-[90%] items-center pb-2">
              <h3>{title}</h3>
            </div>
          </div>
        )}
        {/* Close button */}
        <div className="absolute right-0 top-0">
          <CloseButton onClick={closeHandler} />
        </div>
        <div className="max-h-[500px] overflow-y-scroll">
          <Suspense fallback={null}>{children}</Suspense>
        </div>
      </div>
    </ReactModal>
  );
};

// [
//   [
//     250,
//     220,
//     64,
//     76,
//     90,
//     50,
//   ],
//   [
//     450,
//     260,
//     72,
//     85,
//     101,
//     57,
//   ],
//   [
//     800,
//     340,
//     89,
//     104,
//     123,
//     69,
//   ],
//   [
//     1600,
//     460,
//     113,
//     132,
//     157,
//     88,
//   ],
//   [
//     2450,
//     620,
//     145,
//     170,
//     202,
//     113,
//   ],
//   [
//     3350,
//     820,
//     185,
//     217,
//     258,
//     145,
//   ],
//   [
//     4300,
//     980,
//     233,
//     274,
//     325,
//     183,
//   ],
//   [
//     5300,
//     1260,
//     285,
//     335,
//     397,
//     223,
//   ],
//   [
//     6350,
//     1580,
//     350,
//     410,
//     486,
//     274,
//   ],
//   [
//     7500,
//     2000,
//     338,
//     508,
//     432,
//     602,
//   ],
//   [
//     8750,
//     2520,
//     418,
//     626,
//     534,
//     742,
//   ],
//   [
//     10100,
//     3140,
//     511,
//     767,
//     653,
//     909,
//   ],
//   [
//     11550,
//     3860,
//     619,
//     929,
//     791,
//     1101,
//   ],
//   [
//     13100,
//     4680,
//     742,
//     1112,
//     948,
//     1318,
//   ],
//   [
//     14750,
//     5600,
//     878,
//     1318,
//     1122,
//     1562,
//   ],
//   [
//     16500,
//     6620,
//     1030,
//     1544,
//     1316,
//     1830,
//   ],
//   [
//     18325,
//     7740,
//     1195,
//     1793,
//     1527,
//     2125,
//   ],
//   [
//     20300,
//     8960,
//     1375,
//     2063,
//     1757,
//     2445,
//   ],
//   [
//     22350,
//     10280,
//     1570,
//     2354,
//     2006,
//     2790,
//   ],
//   [
//     24600,
//     11750,
//     2714,
//     1809,
//     2312,
//     3216,
//   ],
//   [
//     27050,
//     13370,
//     3140,
//     2093,
//     2675,
//     3722,
//   ],
//   [
//     29700,
//     15140,
//     3634,
//     2423,
//     3096,
//     4307,
//   ],
//   [
//     32550,
//     17060,
//     4196,
//     2975,
//     3574,
//     4973,
//   ],
//   [
//     35600,
//     19130,
//     4825,
//     3217,
//     4110,
//     5718,
//   ],
//   [
//     38850,
//     21350,
//     5522,
//     3681,
//     4704,
//     6544,
//   ],
//   [
//     42300,
//     23720,
//     6286,
//     4190,
//     5354,
//     7450,
//   ],
//   [
//     45950,
//     26240,
//     7117,
//     4745,
//     6063,
//     8435,
//   ],
//   [
//     49800,
//     28910,
//     8016,
//     5344,
//     6829,
//     9501,
//   ],
//   [
//     53850,
//     31730,
//     8983,
//     5989,
//     7652,
//     10646,
//   ],
//   [
//     58200,
//     34800,
//     12000,
//     10125,
//     6750,
//     8625
//   ],
//   [
//     62850,
//     38120,
//     13265,
//     11443,
//     7628,
//     9747
//   ],
//   [
//     67800,
//     41690,
//     15331,
//     12936,
//     8624,
//     11019
//   ],
//   [
//     73050,
//     45510,
//     17309,
//     14604,
//     9736,
//     12441
//   ],
//   [
//     78600,
//     49580,
//     19494,
//     16448,
//     10966,
//     14012
//   ],
//   [
//     84450,
//     53900,
//     21888,
//     18468,
//     12312,
//     15732
//   ],
//   [
//     90600,
//     58470,
//     24490,
//     20663,
//     13775,
//     17602
//   ],
//   [
//     97050,
//     63290,
//     27299,
//     23034,
//     15356,
//     19621
//   ],
//   [
//     103800,
//     68360,
//     30317,
//     25580,
//     17053,
//     21790
//   ],
//   [
//     110850,
//     73680,
//     33542,
//     28301,
//     18868,
//     24109
//   ],
//   [
//     118300,
//     79350,
//     37248,
//     26772,
//     20952,
//     31428
//   ],
//   [
//     126150,
//     85370,
//     41434,
//     29780,
//     23306,
//     34960
//   ],
//   [
//     134400,
//     91740,
//     46099,
//     33134,
//     25931,
//     38896
//   ],
//   [
//     143050,
//     98460,
//     51245,
//     36832,
//     28825,
//     43238
//   ],
//   [
//     152100,
//     105530,
//     56870,
//     40876,
//     31990,
//     47984
//   ],
//   [
//     161550,
//     112950,
//     62976,
//     45264,
//     35424,
//     53136
//   ],
//   [
//     171400,
//     120720,
//     69562,
//     49997,
//     39128,
//     58693
//   ],
//   [
//     181650,
//     128840,
//     76627,
//     55076,
//     43103,
//     64654
//   ],
//   [
//     192300,
//     137310,
//     84173,
//     60499,
//     47347,
//     71021
//   ],
//   [
//     203350,
//     146130,
//     92198,
//     66268,
//     51862,
//     77792
//   ],
//   [
//     215000,
//     156950,
//     108224,
//     77786,
//     60876,
//     91314
//   ]
// ]
//
// function sumByIndex(arr, index) {
//   const result = [];
//   // Iterate through each subarray
//   for (let i = 0; i <= index; i++) {
//     const subarray = arr[i];
//     // Iterate through each number in the subarray
//     for (let j = 0; j < subarray.length; j++) {
//       // If the result array doesn't have an element at the current index, create it
//       if (!result[j]) {
//         result[j] = 0;
//       }
//       // Add the number at the current index to the corresponding result element
//       result[j] += subarray[j];
//     }
//   }
//   return result;
// }
